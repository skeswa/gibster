apiVersion: apps/v1
kind: Deployment
metadata:
  name: gibster-backend
  namespace: gibster
  labels:
    app: gibster
    component: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gibster
      component: backend
  template:
    metadata:
      labels:
        app: gibster
        component: backend
    spec:
      containers:
      - name: backend
        image: gibster-backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: gibster-secrets
              key: database-url
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: gibster-secrets
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: gibster-secrets
              key: redis-port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gibster-secrets
              key: redis-password
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: gibster-secrets
              key: secret-key
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: gibster-secrets
              key: encryption-key
        - name: ENVIRONMENT
          value: "production"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: gibster-backend
  namespace: gibster
  labels:
    app: gibster
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: gibster
    component: backend
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP