# Gibster Environment Configuration
# Copy this file to .env and update the values for your setup

# =============================================================================
# REQUIRED: Gibney Dance Center Credentials
# =============================================================================
# Your Gibney login credentials (used to scrape bookings)
GIBNEY_EMAIL=your-email@example.com
GIBNEY_PASSWORD=your-password

# =============================================================================
# REQUIRED: Security Keys
# =============================================================================
# JWT signing key - generate with: openssl rand -hex 32
SECRET_KEY=your-secret-key-change-in-production

# Credential encryption key - generate with: openssl rand -hex 32  
ENCRYPTION_KEY=your-encryption-key-change-in-production

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Local Development (default): Uses SQLite - no configuration needed
# DATABASE_URL will default to: sqlite:///./gibster_dev.db

# Production/Alternative: Use PostgreSQL
# DATABASE_URL=postgresql://username:password@localhost:5432/gibster

# Database debugging (shows SQL queries in logs)
DATABASE_DEBUG=false

# =============================================================================
# BACKGROUND TASKS CONFIGURATION  
# =============================================================================
# Local Development: Disable Celery/Redis (tasks run synchronously)
USE_CELERY=false

# Production: Enable Celery with Redis
# USE_CELERY=true
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Server host and port
APP_HOST=127.0.0.1
APP_PORT=8000

# Enable auto-reload for development
APP_RELOAD=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Environment type - affects log format and output
# development: Human-readable logs to console only
# production: JSON structured logs to files + console with rotation
ENVIRONMENT=development

# Logging level - controls verbosity
# DEBUG: Very detailed logs (includes SQL queries if DATABASE_DEBUG=true)
# INFO: General application flow and business events (recommended for production)
# WARNING: Important events and potential issues
# ERROR: Error conditions only
# CRITICAL: Critical errors only
LOG_LEVEL=INFO

# =============================================================================
# OPTIONAL: PRODUCTION SETTINGS
# =============================================================================
# CORS origins (comma-separated)
# CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
 